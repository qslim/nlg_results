{'dataset_name': 'ogbg-molhiv', 'seed': 111, 'num_workers': 0, 'feature': 'full', 'hyperparams': {'batch_size': 64, 'epochs': 251, 'learning_rate': 0.0001, 'step_size': 30, 'decay_rate': 0.85}, 'architecture': {'layers': 3, 'hidden': 128, 'pooling': 'mean', 'JK': 'sum', 'nonlinear_conv': 'EB1', 'dropout': 0.5, 'variants': {'BN': 'N', 'aggr_mlp': 1, 'fea_activation': 'ReLU'}}, 'commit_id': 'a072bd7afdc04f4da7670508c467569e5c851434', 'time_stamp': '1597390943', 'directory': '../../../nlg_results/dc2-Ymq2/ogbg/board/'}
Epoch 1 training...
Traceback (most recent call last):
  File "./main.py", line 175, in <module>
    main()
  File "./main.py", line 136, in main
    train_loss = train(model, device, train_loader, optimizer, dataset.task_type)
  File "./main.py", line 28, in train
    pred = model(batch)
  File "/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/space/github_private/gnnzoo/ogbg/mol/model.py", line 56, in forward
    x = conv(x, edge_index, edge_attr)
  File "/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/space/github_private/gnnzoo/ogbg/mol/conv.py", line 57, in forward
    out = self.propagate(edge_index, x=x, edge_attr=edge_attr)
  File "/opt/conda/lib/python3.6/site-packages/torch_geometric/nn/conv/message_passing.py", line 263, in propagate
    out = self.message(**msg_kwargs)
  File "/space/github_private/gnnzoo/ogbg/mol/conv.py", line 67, in message
    return self.fea_mlp(feature2d)
  File "/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.6/site-packages/torch/nn/modules/container.py", line 100, in forward
    input = module(input)
  File "/opt/conda/lib/python3.6/site-packages/torch/nn/modules/module.py", line 550, in __call__
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.6/site-packages/torch/nn/modules/activation.py", line 94, in forward
    return F.relu(input, inplace=self.inplace)
  File "/opt/conda/lib/python3.6/site-packages/torch/nn/functional.py", line 1063, in relu
    result = torch.relu(input)
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 22.38 GiB total capacity; 49.33 MiB already allocated; 8.56 MiB free; 54.00 MiB reserved in total by PyTorch)
